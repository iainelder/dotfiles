# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest # Don't care about the runner version but it's required
    container:
      image: ubuntu:20.04
    defaults:
      run:
        # Fake bash's interactive mode, which loads ~/.bashrc.
        shell: bash -c "BASH_ENV=~/.bashrc bash {0}"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Debug pwd
        run: pwd

      - name: Debug Github workspace
        run: echo $GITHUB_WORKSPACE

      - name: Install sudo
        run: apt-get update && apt-get --assume-yes install sudo

      - name: Set up BATS
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.2.1

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run install script
        run: |
          cd scripts
          ./install.sh

      # ~/.bashrc has a special case to set the PATH the Github way.
      # Unfortunately this way only takes effect on subsequent steps.
      # So we use a no-op here for its side effects.
      - name: Set PATH the Github way
        run: echo "NO-op to trigger side effects of sourcing ~/.bashrc in CI"

      - name: Debug PATH
        run: echo $PATH

      - name: Test
        run: |
          bats --tap test.bats

